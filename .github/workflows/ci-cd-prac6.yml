name: CI/CD Pipeline for patients_service

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: micros_user
          POSTGRES_PASSWORD: 1987
          POSTGRES_DB: micros_database
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U micros_user"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Prepare for tests
        run: |
          sudo apt update
          sudo apt install -y python3-pip
          pip install -r ./patients_service/requirements.txt
          sudo docker build ./patients_service --file ./patients_service/Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/patients-service:latest
          sudo docker run --name patients-service -p 8000:80 -e DATABASE_URL="postgresql://micros_user:1987@postgres:5432/micros_database" -d ${{ secrets.DOCKER_USERNAME }}/patients-service:latest
      - name: Run tests
        run: pytest ./patients_service/

  build-and-push:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build Docker image
        run: docker build ./patients_service --file ./patients_service/Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/patients-service:latest
      - name: Log in to DockerHub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push Docker image to DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/patients-service:latest
